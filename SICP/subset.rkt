#lang sicp
(define (map trans item)
  (if (null? item)
      nil
      (cons (trans (car item)) (map trans (cdr item))
      )
   )
)
(define (subsets s)
  (if (null? s)
      (list nil)
      (let (
            (rest (subsets (cdr s)))
            )
        (append rest (map (lambda(x)
                          (cons (car s) x))
                           rest))
       )
   )
)  